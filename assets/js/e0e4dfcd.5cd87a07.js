"use strict";(self.webpackChunkmorphling_website=self.webpackChunkmorphling_website||[]).push([[2],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return d}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),c=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),m=c(r),d=a,h=m["".concat(u,".").concat(d)]||m[d]||p[d]||o;return r?n.createElement(h,l(l({ref:t},s),{},{components:r})):n.createElement(h,l({ref:t},s))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=m;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3331:function(e,t,r){r.r(t),r.d(t,{assets:function(){return s},contentTitle:function(){return u},default:function(){return d},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return p}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),l=["components"],i={sidebar_position:8},u="Developer Guide",c={unversionedId:"developer-guide",id:"developer-guide",title:"Developer Guide",description:"There's a Makefile in the root folder which describes the options to build and install. Here are some common ones:",source:"@site/docs/developer-guide.md",sourceDirName:".",slug:"/developer-guide",permalink:"/docs/developer-guide",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/developer-guide.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Morphling UI",permalink:"/docs/ui"},next:{title:"Startup flags",permalink:"/docs/flags"}},s={},p=[{value:"Build the controller manager binary",id:"build-the-controller-manager-binary",level:2},{value:"Run the tests",id:"run-the-tests",level:2},{value:"Generate manifests, e.g., CRD YAML.",id:"generate-manifests-eg-crd-yaml",level:2},{value:"Build Morphling component images.",id:"build-morphling-component-images",level:2},{value:"Push Morphling component images.",id:"push-morphling-component-images",level:2},{value:"Generate the helm chart",id:"generate-the-helm-chart",level:2}],m={toc:p};function d(e){var t=e.components,r=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"developer-guide"},"Developer Guide"),(0,o.kt)("p",null,"There's a ",(0,o.kt)("inlineCode",{parentName:"p"},"Makefile")," in the root folder which describes the options to build and install. Here are some common ones:"),(0,o.kt)("h2",{id:"build-the-controller-manager-binary"},"Build the controller manager binary"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"make manager\n")),(0,o.kt)("h2",{id:"run-the-tests"},"Run the tests"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"make test\n")),(0,o.kt)("h2",{id:"generate-manifests-eg-crd-yaml"},"Generate manifests, e.g., CRD YAML."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"make manifests\n")),(0,o.kt)("h2",{id:"build-morphling-component-images"},"Build Morphling component images."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"make docker-build\n")),(0,o.kt)("h2",{id:"push-morphling-component-images"},"Push Morphling component images."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"make docker-push\n")),(0,o.kt)("h2",{id:"generate-the-helm-chart"},"Generate the helm chart"),(0,o.kt)("p",null,"Generate the helm chart, the helm chart will be generated under ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/kubedl-io/morphling/tree/main/helm/morphling"},"helm/morphling")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"make helm-chart\n")),(0,o.kt)("p",null,"To develop/debug Morphling controller manager locally, please check the ","[Debug Guide]",'({{< ref "debug-guide" >}}).'))}d.isMDXComponent=!0}}]);