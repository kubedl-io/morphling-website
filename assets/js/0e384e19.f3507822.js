"use strict";(self.webpackChunkmorphling_website=self.webpackChunkmorphling_website||[]).push([[671],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=s(n),d=i,f=m["".concat(u,".").concat(d)]||m[d]||c[d]||a;return n?r.createElement(f,l(l({ref:t},p),{},{components:n})):r.createElement(f,l({ref:t},p))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,l=new Array(a);l[0]=m;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var s=2;s<a;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9881:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return u},default:function(){return d},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return c}});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),l=["components"],o={sidebar_position:1},u="Morphling Introduction",s={unversionedId:"intro",id:"intro",title:"Morphling Introduction",description:"KubeDL automatically tunes the best container-level configurations",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/docs/intro",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Install Using Helm",permalink:"/docs/install-using-helm"}},p={},c=[{value:"Morphling Overview",id:"morphling-overview",level:2},{value:"Features",id:"features",level:2},{value:"Core APIs",id:"core-apis",level:2},{value:"Getting started",id:"getting-started",level:2},{value:"Install using Heml",id:"install-using-heml",level:3},{value:"Install using YAML files",id:"install-using-yaml-files",level:3},{value:"Examples",id:"examples",level:3},{value:"Workflow",id:"workflow",level:2},{value:"Developer Guide",id:"developer-guide",level:2},{value:"Community",id:"community",level:2}],m={toc:c};function d(e){var t=e.components,o=(0,i.Z)(e,l);return(0,a.kt)("wrapper",(0,r.Z)({},m,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"morphling-introduction"},"Morphling Introduction"),(0,a.kt)("p",null,"KubeDL automatically tunes the best container-level configurations\nbefore an ML model is deployed as inference services.\nThis auto-configuration workflow is developed as an independent project---",(0,a.kt)("strong",{parentName:"p"},"Morphling"),".   ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/alibaba/morphling"},"Github  \u2192")),(0,a.kt)("p",null,"Morphling paper accepted at ACM Socc 2021:\n",(0,a.kt)("em",{parentName:"p"},"Morphling: Fast, Near-Optimal Auto-Configuration for Cloud-Native Model Serving")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"morphlingui",src:n(1579).Z,width:"826",height:"550"})),(0,a.kt)("h2",{id:"morphling-overview"},"Morphling Overview"),(0,a.kt)("p",null,"Morphling tunes the optimal configurations for your ML/DL model serving deployments.\nIt searches the best container-level configurations (e.g., resource allocations and runtime parameters) by empirical trials, where a few configurations are sampled for performance evaluation."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"morphlingui",src:n(382).Z,width:"2200",height:"580"})),(0,a.kt)("h2",{id:"features"},"Features"),(0,a.kt)("p",null,"Key benefits include:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Automated tuning workflows hidden behind simple APIs."),(0,a.kt)("li",{parentName:"ul"},"Out of the box ML model serving stress-test clients."),(0,a.kt)("li",{parentName:"ul"},"Cloud agnostic and tested on ",(0,a.kt)("a",{parentName:"li",href:"https://aws.amazon.com/"},"AWS"),", ",(0,a.kt)("a",{parentName:"li",href:"https://us.alibabacloud.com/"},"Alicloud"),", etc."),(0,a.kt)("li",{parentName:"ul"},"ML framework agnostic and generally support popular frameworks, including ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/tensorflow/tensorflow"},"TensorFlow"),", ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/pytorch/pytorch"},"PyTorch"),", etc."),(0,a.kt)("li",{parentName:"ul"},"Equipped with various and customizable hyper-parameter tuning algorithms.")),(0,a.kt)("h2",{id:"core-apis"},"Core APIs"),(0,a.kt)("p",null,"Morphling requires users to specify the ",(0,a.kt)("inlineCode",{parentName:"p"},"ProflingExperiment")," interface for configuration tuning,\nincluding:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"ML model container (e.g., the Pod template)")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"performance objective function")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"tunable configuration parameters with types and search range")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"sampling algorithms")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"sampling budget"))),(0,a.kt)("h2",{id:"getting-started"},"Getting started"),(0,a.kt)("h3",{id:"install-using-heml"},"Install using Heml"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"install-using-helm"},"Go \u2192")),(0,a.kt)("h3",{id:"install-using-yaml-files"},"Install using YAML files"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"install-using-yaml"},"Go \u2192")),(0,a.kt)("h3",{id:"examples"},"Examples"),(0,a.kt)("p",null,"Run model serving configuration examples. ",(0,a.kt)("a",{parentName:"p",href:"quick-start"},"Go \u2192")),(0,a.kt)("h2",{id:"workflow"},"Workflow"),(0,a.kt)("p",null,"See ",(0,a.kt)("a",{parentName:"p",href:"design"},"Morphling Workflow")," to check how Morphling tunes ML serving\nconfigurations automatically in a Kubernetes-native way."),(0,a.kt)("h2",{id:"developer-guide"},"Developer Guide"),(0,a.kt)("p",null,"To develop/debug Morphling controller manager locally, please check the ",(0,a.kt)("a",{parentName:"p",href:"developer-guide"},"Developer Guide")," and ",(0,a.kt)("a",{parentName:"p",href:"debug-guide"},"Debug Guide"),"."),(0,a.kt)("h2",{id:"community"},"Community"),(0,a.kt)("p",null,"If you have any questions or want to contribute, GitHub issues or pull requests are warmly welcome."))}d.isMDXComponent=!0},1579:function(e,t,n){t.Z=n.p+"assets/images/logo-7cda610893019d65b64267de8f37d02c.png"},382:function(e,t,n){t.Z=n.p+"assets/images/stack-604b36a6bc05ca6cf97d617ed29c3567.png"}}]);