"use strict";(self.webpackChunkmorphling_website=self.webpackChunkmorphling_website||[]).push([[782],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return h}});var r=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,l=function(e,n){if(null==e)return{};var t,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,l=e.mdxType,a=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=p(t),h=l,g=m["".concat(s,".").concat(h)]||m[h]||c[h]||a;return t?r.createElement(g,i(i({ref:n},u),{},{components:t})):r.createElement(g,i({ref:n},u))}));function h(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var a=t.length,i=new Array(a);i[0]=m;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var p=2;p<a;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},5899:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return s},default:function(){return h},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return c}});var r=t(7462),l=t(3366),a=(t(7294),t(3905)),i=["components"],o={sidebar_position:2},s="Install Using Helm",p={unversionedId:"install-using-helm",id:"install-using-helm",title:"Install Using Helm",description:"Install Helm",source:"@site/docs/install-using-helm.md",sourceDirName:".",slug:"/install-using-helm",permalink:"/docs/install-using-helm",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/install-using-helm.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Morphling Introduction",permalink:"/docs/intro"},next:{title:"Install Using YAMLs",permalink:"/docs/install-using-yaml"}},u={},c=[{value:"Install Helm",id:"install-helm",level:2},{value:"Install Morphling",id:"install-morphling",level:2},{value:"Uninstall Morphling",id:"uninstall-morphling",level:2},{value:"Delete all Morphling CRDs",id:"delete-all-morphling-crds",level:2}],m={toc:c};function h(e){var n=e.components,t=(0,l.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"install-using-helm"},"Install Using Helm"),(0,a.kt)("h2",{id:"install-helm"},"Install Helm"),(0,a.kt)("p",null,"Helm is a package manager for Kubernetes. A demo installation on MacOS:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"brew install helm\n")),(0,a.kt)("p",null,"Check the ",(0,a.kt)("a",{parentName:"p",href:"https://helm.sh/docs/intro/install/"},"helm website")," for more details."),(0,a.kt)("h2",{id:"install-morphling"},"Install Morphling"),(0,a.kt)("p",null,"From the root directory, run"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"helm install morphling ./helm/morphling --create-namespace -n morphling-system\n")),(0,a.kt)("p",null,"You can override default values defined in ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/alibaba/morphling/blob/main/helm/morphling/values.yaml"},"values.yaml")," with ",(0,a.kt)("inlineCode",{parentName:"p"},"--set")," flag.\nFor example, set the custom cpu/memory resource:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"helm install morphling ./helm/morphling --create-namespace -n morphling-system  --set resources.requests.cpu=1024m --set resources.requests.memory=2Gi\n")),(0,a.kt)("p",null,"Helm will install CRDs and other Morphling components under ",(0,a.kt)("inlineCode",{parentName:"p"},"morphling-system")," namespace."),(0,a.kt)("h2",{id:"uninstall-morphling"},"Uninstall Morphling"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"helm uninstall morphling -n morphling-system\n")),(0,a.kt)("h2",{id:"delete-all-morphling-crds"},"Delete all Morphling CRDs"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get crd | grep morphling.kubedl.io | cut -d ' ' -f 1 | xargs kubectl delete crd\n")))}h.isMDXComponent=!0}}]);