"use strict";(self.webpackChunkmorphling_website=self.webpackChunkmorphling_website||[]).push([[239],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return g}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),m=c(n),g=a,d=m["".concat(l,".").concat(g)]||m[g]||p[g]||i;return n?r.createElement(d,o(o({ref:t},s),{},{components:n})):r.createElement(d,o({ref:t},s))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var u={};for(var l in t)hasOwnProperty.call(t,l)&&(u[l]=t[l]);u.originalType=e,u.mdxType="string"==typeof e?e:a,o[1]=u;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4181:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return l},default:function(){return g},frontMatter:function(){return u},metadata:function(){return c},toc:function(){return p}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],u={sidebar_position:4},l="Quick Start",c={unversionedId:"quick-start",id:"quick-start",title:"Quick Start",description:"This example demonstrates how to tune the configuration for a Mobilenet model deployed with Tensorflow Serving under Morphling.",source:"@site/docs/quick-start.md",sourceDirName:".",slug:"/quick-start",permalink:"/docs/quick-start",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/quick-start.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Install Using YAMLs",permalink:"/docs/install-using-yaml"},next:{title:"Tutorial",permalink:"/docs/tutorial"}},s={},p=[{value:"Submit the configuration tuning experiment",id:"submit-the-configuration-tuning-experiment",level:4},{value:"Monitor the tuning experiment status",id:"monitor-the-tuning-experiment-status",level:4},{value:"Monitor sampling trials (performance test)",id:"monitor-sampling-trials-performance-test",level:4},{value:"Get the searched optimal configuration",id:"get-the-searched-optimal-configuration",level:4},{value:"Delete the tuning experiment",id:"delete-the-tuning-experiment",level:4}],m={toc:p};function g(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"quick-start"},"Quick Start"),(0,i.kt)("p",null,"This example demonstrates how to tune the configuration for a ",(0,i.kt)("a",{parentName:"p",href:"https://www.tensorflow.org/api_docs/python/tf/keras/applications/mobilenet"},"Mobilenet")," model deployed with ",(0,i.kt)("a",{parentName:"p",href:"https://www.tensorflow.org/tfx/guide/serving"},"Tensorflow Serving")," under Morphling."),(0,i.kt)("p",null,"For demonstration, we choose ",(0,i.kt)("em",{parentName:"p"},"two")," configurations to tune:\nthe first one the CPU cores (resource allocation), and the second one is maximum serving batch size (runtime parameter).\nWe use grid search for configuration sampling."),(0,i.kt)("h4",{id:"submit-the-configuration-tuning-experiment"},"Submit the configuration tuning experiment"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f https://raw.githubusercontent.com/alibaba/morphling/main/examples/experiment/experiment-mobilenet-grid.yaml\n")),(0,i.kt)("h4",{id:"monitor-the-tuning-experiment-status"},"Monitor the tuning experiment status"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get pe\nkubectl describe pe\n")),(0,i.kt)("h4",{id:"monitor-sampling-trials-performance-test"},"Monitor sampling trials (performance test)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get trial\n")),(0,i.kt)("h4",{id:"get-the-searched-optimal-configuration"},"Get the searched optimal configuration"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get pe\n")),(0,i.kt)("p",null,"Expected output:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"NAME                        STATE       AGE     OBJECT NAME   OPTIMAL OBJECT VALUE   OPTIMAL PARAMETERS\nmobilenet-experiment-grid   Succeeded   5m59s   qps           31                     [map[category:env name:BATCH_SIZE value:2] map[category:resource name:cpu value:2000m] map[category:resource name:memory value:2000Mi]]\n")),(0,i.kt)("h4",{id:"delete-the-tuning-experiment"},"Delete the tuning experiment"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl delete pe --all\n")))}g.isMDXComponent=!0}}]);